@mixin btn-default($display) {
  @if $display == 'primary' {
    color: #fff;
    background-color: #f60;
    border-color: #f60;
    :hover {
      color: #fff;
      background-color: #d95700;
      border-color: #cc5200;
    }
  } @else if $display== 'secondary' {
    color: white;
    display: block;
    width: 100%;
  } @else {
    display: inline-block;
  }
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  border-radius: 0.15rem;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  :hover {
    text-decoration: none;
  }
}

@mixin form-control-default {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  color: #4e4e4e;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.15rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  :focus {
    color: #4e4e4e;
    background-color: #fff;
    border-color: #ced4da;
    outline: 0;
  }
}

@mixin responsive {
  padding-left: 1rem;
  padding-right: 1rem;
  width: 1140px;
  margin: 0 auto;

  @media (max-width: 1140px) {
    width: 768px;
  }
  @media (max-width: 768px) {
    width: 100%;
  }
}

$breakpoints: (
  'x-small': (
    max-width: 575px,
    //576px 이하 -> 2개
  ),
  'small': (
    max-width: 768px,
    // 0-768px
  ),
  // 769 - 992px
  'medium':
    (
      min-width: 769px,
    )
    and
    (
      max-width: 992px,
    ),
  'large': (
    min-width: 993px,
  ),
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
